{
    "openapi": "3.0.0",
    "info": {
        "title": "Eigen Explorer node / server backend",
        "version": "1.0.0",
        "description": "Eigen Explorer node / server backend API documentation",
        "license": {
            "name": "MIT",
            "url": "https://spdx.org/licenses/MIT.html"
        }
    },
    "servers": [
        {
            "url": "http://api.eigenexplorer.com",
            "description": "Eigen Explorer API server"
        }
    ],
    "paths": {
        "/avs": {
            "get": {
                "summary": "Retrieve a list of AVS records",
                "description": "Returns a paginated list of AVS (Automated Validation Systems) records along with summary data for each, such as the number of active operators and total stakers. This endpoint supports pagination.",
                "tags": ["AVS"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "skip",
                        "required": false,
                        "schema": { "type": "integer", "default": 0 },
                        "description": "Number of records to skip for pagination."
                    },
                    {
                        "in": "query",
                        "name": "take",
                        "required": false,
                        "schema": { "type": "integer", "default": 10 },
                        "description": "Limit number of records to return (used for pagination)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A successful response with AVS data.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "avs": {
                                                        "$ref": "#/components/schemas/AVS"
                                                    },
                                                    "totalOperators": {
                                                        "type": "integer",
                                                        "description": "Total number of active operators within the AVS."
                                                    },
                                                    "totalStakers": {
                                                        "type": "integer",
                                                        "description": "Total number of stakers across all operators in this AVS."
                                                    }
                                                }
                                            }
                                        },
                                        "meta": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "description": "Total number of AVS records in the database."
                                                },
                                                "skip": {
                                                    "type": "integer",
                                                    "description": "Number of records skipped in the current request."
                                                },
                                                "take": {
                                                    "type": "integer",
                                                    "description": "Number of records requested to return."
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "General error during the data fetching process.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message detailing the issue encountered."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error on request parameters.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "description": "Error message detailing what went wrong during request validation."
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "EntityMetadata": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the entity."
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity."
                    },
                    "discord": {
                        "type": "string",
                        "description": "Optional Discord contact.",
                        "nullable": true
                    },
                    "logo": {
                        "type": "string",
                        "description": "Optional logo URL.",
                        "nullable": true
                    },
                    "telegram": {
                        "type": "string",
                        "description": "Optional Telegram contact.",
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "description": "Optional website URL.",
                        "nullable": true
                    },
                    "x": {
                        "type": "string",
                        "description": "Additional optional field.",
                        "nullable": true
                    }
                }
            },
            "AvsOperator": {
                "type": "object",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Address of the AVS operator."
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Indicates whether the operator is active."
                    }
                }
            },
            "AVS": {
                "type": "object",
                "required": ["id", "address", "metadata"],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The unique identifier for the AVS."
                    },
                    "address": {
                        "type": "string",
                        "description": "The unique address of the AVS."
                    },
                    "metadata": {
                        "$ref": "#/components/schemas/EntityMetadata",
                        "description": "Metadata associated with the AVS."
                    },
                    "curatedMetadata": {
                        "$ref": "#/components/schemas/EntityMetadata",
                        "description": "Curated metadata, optionally provided for the AVS.",
                        "nullable": true
                    },
                    "tags": {
                        "type": "array",
                        "items": { "type": "string" },
                        "description": "Tags associated with the AVS."
                    },
                    "isVisible": {
                        "type": "boolean",
                        "description": "Visibility status of the AVS."
                    },
                    "isVerified": {
                        "type": "boolean",
                        "description": "Verification status of the AVS."
                    },
                    "operators": {
                        "type": "array",
                        "items": { "$ref": "#/components/schemas/AvsOperator" },
                        "description": "List of operators associated with this AVS."
                    }
                }
            }
        }
    },
    "tags": []
}
